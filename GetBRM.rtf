{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #!/usr/bin/env python\
# coding: utf-8\
\
import json\
import numpy as np\
import pandas as pd\
import tskit\
import argparse\
\
#genetic_relatedness(sample_sets, indexes=None, windows=None, mode='site', span_normalise=True, polarised=False, proportion=True)\
\
#Usage:\
# nohup ./Script.py chrN &\
\
#real numbers\
samples = [[x, x+1] for x in range(0,1930,2)]\
all_combinations = [(x,y) for x in range(965) for y in range(965) if x <= y] #get upper triangle?\
#print(all_combinations)\
\
parser = argparse.ArgumentParser()\
parser.add_argument('chr', type = int)\
args = parser.parse_args()\
\
chr = args.chr\
\
#for chr in range(1,13):\
print("Computing GRM for chr " + str(chr))\
ts_dated = tskit.load("datedFinalTrees/chr_"+ str(chr)+ "_dated.tree")\
resultsB = ts_dated.genetic_relatedness(sample_sets = samples, indexes = all_combinations, mode='branch')\
resultsS = ts_dated.genetic_relatedness(sample_sets = samples, indexes = all_combinations, mode='site')\
grelDF = pd.DataFrame(resultsB, columns = ["GR_branch"])\
#grelDF = pd.DataFrame(resultsS, columns = ["GR_site"])\
grelDF.loc[:, "GR_site"] = resultsS\
grelDF.loc[:, "ID_1"] = [x for x in range(965) for y in range(965) if x <= y]\
grelDF.loc[:, "ID_2"] = [y for x in range(965) for y in range(965) if x <= y]\
grelDF.to_csv("FinalGeneticRelatednessByID/chr" + str(chr) + ".csv", index = None)\
\
print("Done")}